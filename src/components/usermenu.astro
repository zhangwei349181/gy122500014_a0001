---
import Recharge from './recharge.astro'; 
---
<!-- Page title -->
<section id="titile" class="page-title page-title-sm mb-5 bg-body-secondary">
    <div class="container">
        <h2 class="d-none">Breadcrumb</h2>
        <div class="d-flex align-items-center">
            <nav aria-label="breadcrumb" class="me-auto">
                <ol class="breadcrumb mb-3 text-secondary">
                    <li class="breadcrumb-item"><a href="\" class="link-dark">Home</a></li>
                    <li class="breadcrumb-item"><a href="\shop\dashboard" class="link-dark">My Account</a></li>
                </ol>
            </nav>
            <!-- 移动端下拉菜单按钮 -->
            <div class="dropdown d-md-none">
                <button class="btn btn-outline-dark dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-list"></i>
                    <span>账户设置</span>
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item" href="#" id="mobileRechargeBtn">
                            <i class="bi bi-bag-check me-1"></i>
                            <span>账户充值</span>
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="#" id="mobileProfileBtn">
                            <i class="bi bi-gear me-1"></i>
                            <span>修改用户资料</span>
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="#" id="mobileAddressBtn">
                            <i class="bi bi-pin-map me-1"></i>
                            <span>收货地址管理</span>
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="#" id="showChangePasswordBtn">
                            <i class="bi bi-shield-lock me-1"></i>
                            <span>修改密码</span>
                        </a>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                        <a class="dropdown-item text-danger" href="#" id="mobileLogoutBtn">
                            <i class="bi bi-box-arrow-right me-1"></i>
                            <span>登出系统</span>
                        </a>
                    </li>
                </ul>
            </div>
            <!-- 桌面端菜单 -->
            <div class="d-none d-md-flex">
                <div class="mb-3 me-3">
                    <a href="#" class="link-body-emphasis" id="desktopRechargeBtn">
                        <i class="bi bi-bag-check me-1"></i>
                        <span>账户充值</span>
                    </a>
                </div>
                <div class="mb-3 me-3">
                    <a href="#" class="link-body-emphasis" id="desktopProfileBtn">
                        <i class="bi bi-gear me-1"></i>
                        <span>修改用户资料</span>
                    </a>
                </div>
                <div class="mb-3 me-3">
                    <a href="#" class="link-body-emphasis" id="desktopAddressBtn">
                        <i class="bi bi-pin-map me-1"></i>
                        <span>收货地址管理</span>
                    </a>
                </div>
                <div class="mb-3 me-3">
                    <a href="#" class="link-body-emphasis" id="showChangePasswordBtn">
                        <i class="bi bi-shield-lock me-1"></i>
                        <span>修改密码</span>
                    </a>
                </div>
                <div class="mb-3">
                    <a href="#" class="link-body-emphasis" id="desktopLogoutBtn">
                        <i class="bi bi-box-arrow-right"></i>
                        <span>登出系统</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- /Page title -->

<!-- 弹窗部分 -->
<!-- 修改密码弹窗 -->
<div class="modal fade" id="changePasswordModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="changePasswordModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
    <div class="modal-content p-3">
      <div class="modal-header">
        <h3 class="modal-title" id="changePasswordModalTitle">修改密码</h3>
        <button type="button" class="btn-close shadow-none" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form class="needs-validation pt-2" id="changePasswordForm" novalidate>
          <div class="mb-4">
            <label for="oldPassword" class="form-label">当前密码<span class="text-danger">*</span></label>
            <input class="form-control form-control-lg fs-6 shadow-none rounded-0" type="password" id="oldPassword" name="oldPassword" required>
            <div class="invalid-feedback">请输入当前密码</div>
          </div>
          <div class="mb-4">
            <label for="newPassword" class="form-label">新密码<span class="text-danger">*</span></label>
            <input class="form-control form-control-lg fs-6 shadow-none rounded-0" type="password" id="newPassword" name="newPassword" required>
            <div class="invalid-feedback">请输入新密码</div>
          </div>
          <div class="mb-4">
            <label for="confirmPassword" class="form-label">确认新密码<span class="text-danger">*</span></label>
            <input class="form-control form-control-lg fs-6 shadow-none rounded-0" type="password" id="confirmPassword" name="confirmPassword" required>
            <div class="invalid-feedback">请确认新密码</div>
          </div>
          <div id="passwordError" class="text-danger mb-4 d-none"></div>
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
            <button type="submit" class="btn btn-primary">确认修改</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- 修改用户资料弹窗 -->
<div class="modal fade" id="editProfileModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editProfileModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
    <div class="modal-content p-3">
      <div class="modal-header">
        <h3 class="modal-title" id="editProfileModalTitle">修改资料</h3>
        <button type="button" class="btn-close shadow-none" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form class="needs-validation pt-2" id="editProfileForm" novalidate>
          <div class="mb-4">
            <div class="d-flex align-items-center gap-3">
              <div>
                <img id="avatarPreview" src="/default.png" alt="用户头像" class="rounded-circle" style="width: 64px; height: 64px; object-fit: cover;">
              </div>
              <div class="flex-grow-1">
                <label class="form-label">头像</label>
                <input type="file" id="avatarInput" name="avatar" accept="image/*" class="form-control form-control-lg fs-6 shadow-none rounded-0">
              </div>
            </div>
          </div>
          <div class="mb-4">
            <label for="email" class="form-label">邮箱<span class="text-danger">*</span></label>
            <input type="email" id="email" name="email" class="form-control form-control-lg fs-6 shadow-none rounded-0" required>
            <div class="invalid-feedback">请输入有效的邮箱地址</div>
          </div>
          <div class="mb-4">
            <label for="phone" class="form-label">手机号码<span class="text-danger">*</span></label>
            <input type="tel" id="phone" name="phone" class="form-control form-control-lg fs-6 shadow-none rounded-0" required>
            <div class="invalid-feedback">请输入手机号码</div>
          </div>
          <div id="profileError" class="text-danger mb-4 d-none"></div>
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
            <button type="submit" class="btn btn-primary">保存修改</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- 收货地址管理弹窗 -->
<div class="modal fade" id="addressModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addressModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg">
    <div class="modal-content p-3">
      <div class="modal-header">
        <h3 class="modal-title" id="addressModalTitle">收货地址管理</h3>
        <button type="button" class="btn-close shadow-none" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="d-flex justify-content-end mb-4">
          <button id="addAddressBtn" class="btn btn-primary">添加新地址</button>
        </div>
        
        <!-- 地址列表 -->
        <div id="addressList" class="mb-4">
          <!-- 地址项会通过 JavaScript 动态添加 -->
        </div>

        <!-- 地址表单 -->
        <form class="needs-validation d-none" id="addressForm" novalidate>
          <div class="mb-4">
            <label for="consignee" class="form-label">收货人<span class="text-danger">*</span></label>
            <input type="text" id="consignee" name="consignee" class="form-control form-control-lg fs-6 shadow-none rounded-0" required>
            <div class="invalid-feedback">请输入收货人姓名</div>
          </div>
          <div class="mb-4">
            <label for="phone" class="form-label">联系电话<span class="text-danger">*</span></label>
            <input type="tel" id="phone" name="phone" class="form-control form-control-lg fs-6 shadow-none rounded-0" required>
            <div class="invalid-feedback">请输入联系电话</div>
          </div>
          <div class="mb-4">
            <label for="region" class="form-label">所在区域<span class="text-danger">*</span></label>
            <select id="region" name="region" class="form-select form-select-lg fs-6 shadow-none rounded-0" required>
              <option value="">请选择区域</option>
            </select>
            <div class="invalid-feedback">请选择所在区域</div>
          </div>
          <div class="mb-4">
            <label for="address" class="form-label">详细地址<span class="text-danger">*</span></label>
            <textarea id="address" name="address" rows="3" class="form-control form-control-lg fs-6 shadow-none rounded-0" required></textarea>
            <div class="invalid-feedback">请输入详细地址</div>
          </div>
          <div class="mb-4">
            <div class="form-check">
              <input type="checkbox" id="isDefault" name="isDefault" class="form-check-input">
              <label class="form-check-label" for="isDefault">设为默认地址</label>
            </div>
          </div>
          <div id="addressError" class="text-danger mb-4 d-none"></div>
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-secondary" id="cancelAddressBtn">取消</button>
            <button type="submit" class="btn btn-primary">保存地址</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- 账户充值弹窗 -->
<Recharge />

<script>
  import regions from '../data/products/region';

  // 获取用户数据
  function getUserData() {
    const userDataStr = localStorage.getItem('userData');
    return userDataStr ? JSON.parse(userDataStr) : null;
  }

  // 更新用户数据
  function updateUserData(newData: any) {
    const currentData = getUserData();
    const updatedData = { ...currentData, ...newData };
    localStorage.setItem('userData', JSON.stringify(updatedData));
  }

  // 更新用户头像
  function updateUserAvatar() {
    const user = getUserData();
    if (!user) return;

    const avatarImg = document.getElementById('avatarPreview');
    if (avatarImg instanceof HTMLImageElement) {
      avatarImg.src = user.avatar || '/default.png';
      avatarImg.alt = `${user.username}'s avatar`;
    }
  }

  // 登出系统
  function logout() {
    localStorage.removeItem('userData');
    window.location.href = '/';
  }

  // 声明 bootstrap 类型
  declare const bootstrap: {
    Modal: {
      new (element: HTMLElement): {
        show(): void;
        hide(): void;
      };
      getInstance(element: HTMLElement | null): {
        hide(): void;
        show(): void;
      } | null;
    };
  };

  // 初始化事件监听
  function initEvents() {
    // 修改密码按钮
    document.querySelectorAll('#showChangePasswordBtn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const modalEl = document.getElementById('changePasswordModal');
        if (modalEl) {
          const modal = new bootstrap.Modal(modalEl);
          modal.show();
        }
      });
    });

    // 修改资料按钮
    document.querySelectorAll('#desktopProfileBtn, #mobileProfileBtn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const modalEl = document.getElementById('editProfileModal');
        if (modalEl) {
          const modal = new bootstrap.Modal(modalEl);
          modal.show();
          // 填充用户数据
          fillUserData();
        }
      });
    });

    // 收货地址按钮
    document.querySelectorAll('#desktopAddressBtn, #mobileAddressBtn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        e.preventDefault();
        const modalEl = document.getElementById('addressModal');
        if (modalEl) {
          const modal = new bootstrap.Modal(modalEl);
          modal.show();
          // 加载地址列表
          await loadAddresses();
        }
      });
    });

    // 账户充值按钮
    document.querySelectorAll('#desktopRechargeBtn, #mobileRechargeBtn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const modalEl = document.getElementById('rechargeModal');
        if (modalEl) {
          const modal = new bootstrap.Modal(modalEl);
          modal.show();
        }
      });
    });

    // 登出按钮
    document.querySelectorAll('#desktopLogoutBtn, #mobileLogoutBtn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        logout();
      });
    });
  }

  // 修改密码相关函数
  function initChangePassword() {
    const modalEl = document.getElementById('changePasswordModal');
    const form = document.getElementById('changePasswordForm') as HTMLFormElement;
    const errorDiv = document.getElementById('passwordError');
    
    // 关闭弹窗
    const closeModal = () => {
      if (modalEl) {
        const modal = bootstrap.Modal.getInstance(modalEl);
        modal?.hide();
        if (form) form.reset();
        if (errorDiv) errorDiv.classList.add('d-none');
      }
    };
    
    // 表单提交
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();

      // 表单验证
      if (form && !form.checkValidity()) {
        e.stopPropagation();
        form.classList.add('was-validated');
        return;
      }

      const user = getUserData();
      if (!user?.user_id) return;
      
      const oldPassword = (document.getElementById('oldPassword') as HTMLInputElement)?.value;
      const newPassword = (document.getElementById('newPassword') as HTMLInputElement)?.value;
      const confirmPassword = (document.getElementById('confirmPassword') as HTMLInputElement)?.value;
      
      // 验证新密码
      if (newPassword !== confirmPassword) {
        if (errorDiv) {
          errorDiv.textContent = '两次输入的新密码不一致';
          errorDiv.classList.remove('d-none');
        }
        return;
      }
      
      try {
        const response = await fetch('https://cyadmin.shopaeo.cn/api/user/change-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            user_id: user.user_id,
            old_password: oldPassword,
            new_password: newPassword,
          }),
        });
        
        const data = await response.json() as { success: boolean; message?: string };
        
        if (response.ok && data.success) {
          alert('密码修改成功');
          closeModal();
        } else {
          if (errorDiv) {
            errorDiv.textContent = data.message || '密码修改失败';
            errorDiv.classList.remove('d-none');
          }
        }
      } catch (error) {
        console.error('修改密码失败:', error);
        if (errorDiv) {
          errorDiv.textContent = '服务器错误，请稍后重试';
          errorDiv.classList.remove('d-none');
        }
      }
    });
  }

  // 修改用户资料相关函数
  let editProfileForm: HTMLFormElement | null = null;
  let editProfileAvatarPreview: HTMLImageElement | null = null;

  // 填充用户数据到表单
  function fillUserData() {
    const user = getUserData();
    if (!user || !editProfileForm) return;

    // 填充邮箱
    const emailInput = editProfileForm.querySelector('#email') as HTMLInputElement;
    if (emailInput) emailInput.value = user.email || '';

    // 填充手机号
    const phoneInput = editProfileForm.querySelector('#phone') as HTMLInputElement;
    if (phoneInput) phoneInput.value = user.phone || '';

    // 设置头像预览
    if (editProfileAvatarPreview) {
      editProfileAvatarPreview.src = user.avatar || '/default.png';
    }
  }

  function initEditProfile() {
    const modalEl = document.getElementById('editProfileModal');
    editProfileForm = document.getElementById('editProfileForm') as HTMLFormElement;
    const errorDiv = document.getElementById('profileError');
    const avatarInput = document.getElementById('avatarInput') as HTMLInputElement;
    editProfileAvatarPreview = document.getElementById('avatarPreview') as HTMLImageElement;
    let uploadedAvatarUrl = '';
    
    // 关闭弹窗
    const closeModal = () => {
      if (modalEl) {
        const modal = bootstrap.Modal.getInstance(modalEl);
        modal?.hide();
        if (editProfileForm) editProfileForm.reset();
        if (errorDiv) errorDiv.classList.add('d-none');
      }
    };
    
    // 处理头像上传
    avatarInput?.addEventListener('change', async (e) => {
      const file = (e.target as HTMLInputElement).files?.[0];
      if (!file) return;
      
      // 验证文件类型和大小
      if (!file.type.startsWith('image/')) {
        alert('请上传图片文件');
        return;
      }
      if (file.size > 5 * 1024 * 1024) {
        alert('图片大小不能超过5MB');
        return;
      }
      
      try {
        const formData = new FormData();
        formData.append('file', file);
        
        const response = await fetch('https://houd001.pages.dev/user/upload', {
          method: 'POST',
          body: formData
        });
        
        const result = await response.json() as { success: boolean; url?: string; message?: string };
        if (response.ok && result.url) {
          uploadedAvatarUrl = result.url;
          if (editProfileAvatarPreview) {
            editProfileAvatarPreview.src = result.url;
          }
          alert('头像上传成功');
        } else {
          throw new Error(result.message || '上传失败');
        }
      } catch (error) {
        console.error('上传头像错误:', error);
        alert('上传头像失败: ' + (error as Error).message);
      }
    });
    
    // 表单提交
    editProfileForm?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const user = getUserData();
      if (!user?.user_id) return;
      
      const email = (document.getElementById('email') as HTMLInputElement)?.value;
      const phone = (document.getElementById('phone') as HTMLInputElement)?.value;
      
      try {
        const response = await fetch('https://cyadmin.shopaeo.cn/api/user/update-profile', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            user_id: user.user_id,
            email,
            phone,
            avatar: uploadedAvatarUrl
          }),
        });
        
        const data = await response.json() as { success: boolean; message?: string; user?: any };
        
        if (response.ok && data.success) {
          // 更新本地用户信息
          updateUserData(data.user);
          
          alert('资料修改成功');
          closeModal();
        } else {
          if (errorDiv) {
            errorDiv.textContent = data.message || '修改失败';
            errorDiv.classList.remove('d-none');
          }
        }
      } catch (error) {
        console.error('修改资料失败:', error);
        if (errorDiv) {
          errorDiv.textContent = '服务器错误，请稍后重试';
          errorDiv.classList.remove('d-none');
        }
      }
    });
  }

  // 收货地址管理相关函数
  let addressList: HTMLElement | null = null;
  let editingAddressId: number | null = null;
  let addressForm: HTMLFormElement | null = null;

  // 显示地址表单
  function showAddressForm(address?: any) {
    if (addressForm && address) {
      addressForm.consignee.value = address.consignee || '';
      addressForm.phone.value = address.phone || '';
      addressForm.address.value = address.address || '';
      addressForm.region.value = address.region_id || '';
      addressForm.isDefault.checked = address.is_default === 1;
    } else {
      addressForm?.reset();
    }
    addressForm?.classList.remove('d-none');
  }
  
  // 隐藏地址表单
  function hideAddressForm() {
    addressForm?.classList.add('d-none');
    addressForm?.reset();
    editingAddressId = null;
  }

  // 初始化地址列表中的事件
  function initAddressEvents() {
    // 编辑按钮
    document.querySelectorAll('.edit-address-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const addressDiv = (e.target as HTMLElement).closest('[data-address-id]');
        if (!addressDiv) return;
        
        editingAddressId = Number(addressDiv.getAttribute('data-address-id'));
        const response = await fetch(`https://cyadmin.shopaeo.cn/api/user/address/${editingAddressId}`);
        const data = await response.json() as { success: boolean; address?: any };
        
        if (response.ok && data.success) {
          showAddressForm(data.address);
        }
      });
    });
    
    // 删除按钮
    document.querySelectorAll('.delete-address-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        if (!confirm('确定要删除这个地址吗？')) return;
        
        const addressDiv = (e.target as HTMLElement).closest('[data-address-id]');
        if (!addressDiv) return;
        
        const addressId = Number(addressDiv.getAttribute('data-address-id'));
        try {
          const response = await fetch(`https://cyadmin.shopaeo.cn/api/user/address/${addressId}`, {
            method: 'DELETE'
          });
          
          if (response.ok) {
            await loadAddresses();
          }
        } catch (error) {
          console.error('删除地址失败:', error);
        }
      });
    });
  }

  // 加载地址列表
  async function loadAddresses() {
    const user = getUserData();
    if (!user?.user_id || !addressList) return;
    
    try {
      const response = await fetch(`https://cyadmin.shopaeo.cn/api/user/addresses?user_id=${user.user_id}`);
      const data = await response.json() as { success: boolean; addresses?: Array<{
        address_id: number;
        consignee: string;
        phone: string;
        address: string;
        region_id: number;
        region_name: string;
        is_default: number;
      }> };
      
      if (response.ok && data.success) {
        addressList.innerHTML = data.addresses?.map(addr => `
          <div class="p-4 border rounded-lg relative group" data-address-id="${addr.address_id}">
            <div class="flex justify-between items-start mb-2">
              <div class="flex items-center gap-2">
                <span class="font-medium">${addr.consignee}</span>
                <span class="text-gray-600">${addr.phone}</span>
                ${addr.is_default ? '<span class="text-xs text-primary border border-primary rounded px-1">默认</span>' : ''}
              </div>
              <div class="flex items-center gap-2">
                <button class="edit-address-btn" style="color: #2563eb; cursor: pointer;">
                  <svg style="width: 20px; height: 20px;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                </button>
                <button class="delete-address-btn" style="color: #dc2626; cursor: pointer;">
                  <svg style="width: 20px; height: 20px;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                  </svg>
                </button>
              </div>
            </div>
            <p class="text-gray-600">${addr.region_name} ${addr.address}</p>
          </div>
        `).join('') || '<p class="text-center text-gray-500">暂无收货地址</p>';
        
        // 添加编辑和删除事件监听
        initAddressEvents();
      }
    } catch (error) {
      console.error('加载地址失败:', error);
    }
  }

  function initAddressManager() {
    const modalEl = document.getElementById('addressModal');
    addressForm = document.getElementById('addressForm') as HTMLFormElement;
    addressList = document.getElementById('addressList');
    const errorDiv = document.getElementById('addressError');
    const regionSelect = document.getElementById('region') as HTMLSelectElement | null;
    
    // 关闭弹窗
    const closeModal = () => {
      if (modalEl) {
        const modal = bootstrap.Modal.getInstance(modalEl);
        modal?.hide();
        hideAddressForm();
      }
    };
    
    // 初始化区域选择器
    function initRegionSelect() {
      if (!regionSelect) return;
      
      // 清空现有选项
      regionSelect.innerHTML = '<option value="">请选择区域</option>';
      
      // 添加区域选项
      regions.regions.forEach(region => {
        const option = document.createElement('option');
        option.value = region.region_id.toString();
        option.textContent = region.region_name;
        regionSelect.appendChild(option);
      });
    }
    
    // 添加新地址按钮点击
    document.getElementById('addAddressBtn')?.addEventListener('click', () => {
      editingAddressId = null;
      showAddressForm();
    });
    
    // 表单提交
    addressForm?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const user = getUserData();
      if (!user?.user_id || !addressForm) return;
      
      const formData = new FormData(addressForm);
      const addressData = {
        user_id: user.user_id,
        consignee: formData.get('consignee'),
        phone: formData.get('phone'),
        region_id: parseInt(formData.get('region') as string),
        address: formData.get('address'),
        is_default: formData.get('isDefault') ? 1 : 0
      };
      
      try {
        const response = await fetch(
          editingAddressId 
            ? `https://cyadmin.shopaeo.cn/api/user/address/${editingAddressId}`
            : 'https://cyadmin.shopaeo.cn/api/user/address',
          {
            method: editingAddressId ? 'PUT' : 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(addressData),
          }
        );
        
        if (response.ok) {
          await loadAddresses();
          hideAddressForm();
        }
      } catch (error) {
        console.error('保存地址失败:', error);
        if (errorDiv) {
          errorDiv.textContent = '保存失败，请稍后重试';
          errorDiv.classList.remove('d-none');
        }
      }
    });

    // 初始化区域选择器
    initRegionSelect();
  }

  // 初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      updateUserAvatar();
      initEvents();
      initChangePassword();
      initEditProfile();
      initAddressManager();
    });
  } else {
    updateUserAvatar();
    initEvents();
    initChangePassword();
    initEditProfile();
    initAddressManager();
  }

  // 监听用户信息变化
  document.addEventListener('userUpdated', () => {
    updateUserAvatar();
  });
</script>