<div class="mb-5">
    <h2 class="h4 mb-3">资金日志</h2>
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col" class="fw-medium text-uppercase">#ID</th>
                    <th scope="col" class="fw-medium text-uppercase">操作类型</th>
                    <th scope="col" class="fw-medium text-uppercase">金额</th>
                    <th scope="col" class="fw-medium text-uppercase">余额</th>
                    <th scope="col" class="fw-medium text-uppercase">备注</th>
                    <th scope="col" class="fw-medium text-uppercase">创建时间</th>
                </tr>
            </thead>
            <tbody id="fundLogList">
                <tr>
                    <td colspan="6" class="text-center">加载中...</td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- 分页控件 -->
    <nav aria-label="资金日志分页" class="mt-3">
        <ul class="pagination justify-content-center" id="fundLogPagination">
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="上一页">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li class="page-item active">
                <a class="page-link" href="#">1</a>
            </li>
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="下一页">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

<script>
interface FundLog {
    log_id: number;
    user_id: number;
    operation_type: string;
    amount: number;
    balance: number;
    remark: string;
    operator_id: number;
    created_at: string;
}

interface ApiResponse {
    success: boolean;
    data: {
        logs: FundLog[];
        pagination: {
            total: number;
            page: number;
            pageSize: number;
            totalPages: number;
        };
    };
}

let currentPage = 1;
let totalPages = 1;
const pageSize = 10;

// 获取资金日志列表
async function fetchFundLogs(page: number = 1) {
    try {
        const userDataStr = localStorage.getItem('userData');
        if (!userDataStr) return;

        const userData = JSON.parse(userDataStr);
        if (!userData?.user_id) return;

        const url = new URL('https://cyadmin.shopaeo.cn/api/payment/fund_log');
        url.searchParams.set('user_id', userData.user_id.toString());
        url.searchParams.set('page', page.toString());
        url.searchParams.set('pageSize', pageSize.toString());

        const response = await fetch(url);
        const data = await response.json() as ApiResponse;
        
        if (response.ok && data.success) {
            currentPage = page;
            totalPages = data.data.pagination.totalPages;
            updateFundLogList(data.data.logs);
            updatePagination();
        }
    } catch (error) {
        console.error('获取资金日志失败:', error);
    }
}

// 更新资金日志列表显示
function updateFundLogList(logs: FundLog[]) {
    const logListEl = document.getElementById('fundLogList');
    if (!logListEl) return;

    if (logs.length === 0) {
        logListEl.innerHTML = '<tr><td colspan="6" class="text-center">暂无记录</td></tr>';
        return;
    }

    logListEl.innerHTML = logs.map(log => `
        <tr>
            <th scope="row">${log.log_id}</th>
            <td>${getOperationTypeText(log.operation_type)}</td>
            <td class="${log.operation_type === 'add' ? 'text-success' : 'text-danger'}">
                ${log.operation_type === 'add' ? '+' : '-'}$${Math.abs(log.amount).toFixed(2)}
            </td>
            <td>$${log.balance.toFixed(2)}</td>
            <td>${log.remark || '-'}</td>
            <td>${new Date(log.created_at).toLocaleString()}</td>
        </tr>
    `).join('');
}

// 获取操作类型文本
function getOperationTypeText(type: string): string {
    const typeMap: { [key: string]: string } = {
        'add': '充值',
        'reduce': '扣款'
    };
    return typeMap[type] || type;
}

// 更新分页控件
function updatePagination() {
    const paginationEl = document.getElementById('fundLogPagination');
    if (!paginationEl) return;

    let paginationHtml = `
        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" data-page="${currentPage - 1}" aria-label="上一页">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
    `;

    // 计算显示的页码范围
    let startPage = Math.max(1, currentPage - 2);
    let endPage = Math.min(totalPages, currentPage + 2);

    // 调整范围以确保始终显示5个页码（如果有）
    if (endPage - startPage < 4) {
        if (startPage === 1) {
            endPage = Math.min(5, totalPages);
            startPage = 1;
        } else if (endPage === totalPages) {
            startPage = Math.max(1, endPage - 4);
        }
    }

    // 添加第一页
    if (startPage > 1) {
        paginationHtml += `
            <li class="page-item">
                <a class="page-link" href="#" data-page="1">1</a>
            </li>
            ${startPage > 2 ? '<li class="page-item disabled"><span class="page-link">...</span></li>' : ''}
        `;
    }

    // 添加页码
    for (let i = startPage; i <= endPage; i++) {
        paginationHtml += `
            <li class="page-item ${i === currentPage ? 'active' : ''}">
                <a class="page-link" href="#" data-page="${i}">${i}</a>
            </li>
        `;
    }

    // 添加最后一页
    if (endPage < totalPages) {
        paginationHtml += `
            ${endPage < totalPages - 1 ? '<li class="page-item disabled"><span class="page-link">...</span></li>' : ''}
            <li class="page-item">
                <a class="page-link" href="#" data-page="${totalPages}">${totalPages}</a>
            </li>
        `;
    }

    // 添加下一页按钮
    paginationHtml += `
        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" data-page="${currentPage + 1}" aria-label="下一页">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    `;

    paginationEl.innerHTML = paginationHtml;

    // 添加页码点击事件
    paginationEl.querySelectorAll('.page-link').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const page = parseInt((e.target as HTMLElement).dataset.page || '1');
            if (page && page !== currentPage && page >= 1 && page <= totalPages) {
                fetchFundLogs(page);
            }
        });
    });
}

// 页面加载时获取资金日志列表
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        fetchFundLogs(1);
    });
} else {
    fetchFundLogs(1);
}
</script>
