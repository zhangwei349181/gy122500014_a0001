---
import Layout from '../../layouts/Layout.astro'; 
import Header from '../../components/header02.astro';
import Search from '../../components/search.astro';
import Cart from '../../components/cart.astro';
import Login from '../../components/login.astro';
import Password from '../../components/password.astro';
import Register from '../../components/register.astro';
import Footer from '../../components/footer.astro';

---

<Layout title="订单结算">

    <Header/>
    <Search/>
    <Cart/>
    <Login/>
    <Password/>
    <Register/>
    <!-- Main -->
    <main>

        <!-- Title -->
        <section id="titile" class="page-title mb-5 bg-body-secondary" data-cue="fadeIn">
            <div class="container">
                <div class="text-center">
                    <h1 class="title me-lg-auto mb-3">产品结算与支付</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-3 text-secondary justify-content-center">
                            <li class="breadcrumb-item"><a href="\" class="link-dark">Home</a></li>
                            <li class="breadcrumb-item"><a href="/shop/shopping-cart" class="link-dark">购物车</a></li>
                            <li class="breadcrumb-item active" aria-current="page">结算与支付</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </section>
        <!-- /Title -->

        <!-- 结算内容 -->
        <section id="checkout" class="mb-5">
            <div class="container">
                <div class="row">
                    <!-- 左侧：商品清单 -->
                    <div class="col-lg-8 mb-4 mb-lg-0">
                        <div class="card rounded-0">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">商品清单</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th scope="col">商品</th>
                                                <th scope="col" class="text-center">单价</th>
                                                <th scope="col" class="text-center">数量</th>
                                                <th scope="col" class="text-center">小计</th>
                                                <th scope="col" class="text-center">收货地址</th>
                                            </tr>
                                        </thead>
                                        <tbody id="checkout-items">
                                            <!-- 商品列表将通过 JavaScript 动态加载 -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- 右侧：支付信息 -->
                    <div class="col-lg-4">
                        <div class="card rounded-0">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">支付信息</h5>
                            </div>
                            <div class="card-body">
                                <div class="mb-4">
                                    <h6 class="mb-3">支付方式</h6>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input" type="radio" name="payWay" id="payWayWallet" value="1" checked>
                                        <label class="form-check-label" for="payWayWallet">
                                            钱包支付
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input" type="radio" name="payWay" id="payWayDirect" value="2">
                                        <label class="form-check-label" for="payWayDirect">
                                            直接支付
                                        </label>
                                    </div>
                                </div>

                                <div class="mb-4" id="payTypeContainer" style="display: none;">
                                    <h6 class="mb-3">支付类型</h6>
                                    <select class="form-select" id="payType">
                                        <option value="">请选择支付类型</option>
                                        <!-- 支付类型将通过 JavaScript 动态加载 -->
                                    </select>
                                </div>

                                <div class="border-top pt-3">
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>商品总额</span>
                                        <span id="subtotal">¥0.00</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>运费总额</span>
                                        <span id="total-shipping">¥0.00</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>税费总额</span>
                                        <span id="total-tax">¥0.00</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-3 fw-bold">
                                        <span>应付总额</span>
                                        <span id="total-amount" class="text-danger">¥0.00</span>
                                    </div>
                                    <button class="btn btn-primary w-100" id="submitOrderBtn">
                                        提交订单
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- /结算内容 -->

    </main>
    <!-- /Main -->

    <Footer/>

    <script>
        // 定义接口
        interface CartItem {
            product_id: number;
            product_name: string;
            product_image: string;
            sku: string;
            price: number;
            region_id: number;
            quantity: number;
            shipping_fee: number;
            tax_fee: number;
        }

        interface Address {
            address_id: number;
            consignee: string;
            phone: string;
            address: string;
            region_id: number;
            region_name: string;
            is_default: number;
        }

        interface PayType {
            type_id: number;
            type_name: string;
        }

        // 全局变量
        let cartItems: CartItem[] = [];
        let addresses: Address[] = [];
        let payTypes: PayType[] = [];
        let selectedAddresses: { [key: number]: number } = {}; // 商品ID -> 地址ID

        // 获取用户数据
        function getUserData() {
            const userDataStr = localStorage.getItem('userData');
            return userDataStr ? JSON.parse(userDataStr) : null;
        }

        // 加载购物车数据
        function loadCartItems() {
            try {
                const cartData = localStorage.getItem('cart');
                if (cartData) {
                    cartItems = JSON.parse(cartData);
                    updateCheckoutItems();
                    updateTotals();
                } else {
                    window.location.href = '/shop/shopping-cart';
                }
            } catch (error) {
                console.error('加载购物车数据失败:', error);
                alert('加载购物车数据失败，请返回购物车页面重试');
                window.location.href = '/shop/shopping-cart';
            }
        }

        // 加载收货地址
        async function loadAddresses() {
            const user = getUserData();
            if (!user?.user_id) {
                alert('请先登录');
                window.location.href = '/';
                return;
            }

            try {
                const response = await fetch(`https://cyadmin.shopaeo.cn/api/user/addresses?user_id=${user.user_id}`);
                const data = await response.json() as { success: boolean; addresses?: Address[] };
                
                if (response.ok && data.success) {
                    addresses = data.addresses || [];
                    updateCheckoutItems();
                } else {
                    console.error('加载地址失败:', data);
                }
            } catch (error) {
                console.error('加载地址失败:', error);
            }
        }

        // 加载支付类型
        async function loadPayTypes() {
            try {
                const response = await fetch('https://cyadmin.shopaeo.cn/api/payment/pay_type');
                const data = await response.json() as { success: boolean; data?: PayType[] };
                
                if (data && data.success && Array.isArray(data.data)) {
                    payTypes = data.data;
                    updatePayTypeSelect();
                }
            } catch (error) {
                console.error('加载支付类型失败:', error);
            }
        }

        // 更新支付类型下拉框
        function updatePayTypeSelect() {
            const payTypeElement = document.getElementById('payType');
            if (!payTypeElement || !(payTypeElement instanceof HTMLSelectElement)) return;
            
            // 清空现有选项
            payTypeElement.innerHTML = '<option value="">请选择支付类型</option>';
            
            // 添加支付类型选项
            payTypes.forEach(type => {
                const option = document.createElement('option');
                option.value = type.type_id.toString();
                option.textContent = type.type_name;
                payTypeElement.appendChild(option);
            });
        }

        // 更新结算商品列表
        function updateCheckoutItems() {
            const tbody = document.getElementById('checkout-items');
            if (!tbody) return;
            
            if (cartItems.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5" class="text-center">购物车为空</td></tr>';
                return;
            }

            // 检查是否有收货地址
            if (addresses.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="5" class="text-center">
                            <div class="alert alert-warning mb-0">
                                <p class="mb-2">您还没有收货地址，请在用户中心添加收货地址。</p>
                                <a href="/user/address" class="btn btn-primary btn-sm">添加收货地址</a>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            tbody.innerHTML = cartItems.map(item => {
                const itemTotal = item.price * item.quantity;
                const selectedAddressId = selectedAddresses[item.product_id] || '';
                
                const addressOptions = addresses.map(addr => {
                    // 将商品的region_id转换为数字后再比较
                    const isMatched = addr.region_id === parseInt(item.region_id);
                    return `<option value="${isMatched ? addr.address_id : ''}" 
                        ${selectedAddressId === addr.address_id ? 'selected' : ''} 
                        ${!isMatched ? 'disabled' : ''}>
                        ${addr.consignee} - ${addr.phone} - ${addr.region_name} ${addr.address}
                        ${!isMatched ? ' (不支持配送到该地区)' : ''}
                    </option>`;
                }).join('');
                
                return `
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="${item.product_image}" alt="${item.product_name}" class="me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                <div>
                                    <h6 class="mb-0">${item.product_name}</h6>
                                    <small class="text-muted">SKU: ${item.sku}</small>
                                </div>
                            </div>
                        </td>
                        <td class="text-center">¥${item.price.toFixed(2)}</td>
                        <td class="text-center">${item.quantity}</td>
                        <td class="text-center">¥${itemTotal.toFixed(2)}</td>
                        <td>
                            <select class="form-select form-select-sm address-select" data-product-id="${item.product_id}" required>
                                <option value="">请选择收货地址</option>
                                ${addressOptions}
                            </select>
                        </td>
                    </tr>
                `;
            }).join('');
            
            // 绑定地址选择事件
            document.querySelectorAll('.address-select').forEach(select => {
                select.addEventListener('change', (e) => {
                    const productId = parseInt((e.target as HTMLSelectElement).dataset.productId || '0');
                    const addressId = parseInt((e.target as HTMLSelectElement).value || '0');
                    if (productId && addressId) {
                        selectedAddresses[productId] = addressId;
                    } else {
                        delete selectedAddresses[productId];
                    }
                });
            });
        }

        // 更新总计金额
        function updateTotals() {
            let subtotal = 0;
            let totalShipping = 0;
            let totalTax = 0;
            
            cartItems.forEach(item => {
                subtotal += item.price * item.quantity;
                totalShipping += item.shipping_fee;
                totalTax += item.tax_fee;
            });
            
            const totalAmount = subtotal + totalShipping + totalTax;
            
            // 更新显示
            const subtotalEl = document.getElementById('subtotal');
            const totalShippingEl = document.getElementById('total-shipping');
            const totalTaxEl = document.getElementById('total-tax');
            const totalAmountEl = document.getElementById('total-amount');
            
            if (subtotalEl) subtotalEl.textContent = `¥${subtotal.toFixed(2)}`;
            if (totalShippingEl) totalShippingEl.textContent = `¥${totalShipping.toFixed(2)}`;
            if (totalTaxEl) totalTaxEl.textContent = `¥${totalTax.toFixed(2)}`;
            if (totalAmountEl) totalAmountEl.textContent = `¥${totalAmount.toFixed(2)}`;
        }

        // 提交订单
        async function submitOrder() {
            const user = getUserData();
            if (!user?.user_id) {
                alert('请先登录');
                window.location.href = '/';
                return;
            }
            
            // 检查是否所有商品都选择了地址
            const missingAddress = cartItems.some(item => !selectedAddresses[item.product_id]);
            if (missingAddress) {
                alert('请为所有商品选择收货地址');
                return;
            }
            
            // 验证所选地址的区域是否匹配
            const invalidAddress = cartItems.some(item => {
                const selectedAddress = addresses.find(addr => addr.address_id === selectedAddresses[item.product_id]);
                return !selectedAddress || selectedAddress.region_id !== parseInt(item.region_id);
            });
            
            if (invalidAddress) {
                alert('所选收货地址与商品配送区域不匹配，请重新选择');
                return;
            }
            
            // 获取支付方式
            const payWay = parseInt((document.querySelector('input[name="payWay"]:checked') as HTMLInputElement)?.value || '1');
            
            // 如果是直接支付，检查是否选择了支付类型
            let payType = 0;
            if (payWay === 2) {
                const payTypeElement = document.getElementById('payType');
                if (payTypeElement instanceof HTMLSelectElement) {
                    payType = parseInt(payTypeElement.value || '0');
                }
                if (!payType) {
                    alert('请选择支付类型');
                    return;
                }
            }
            
            // 准备订单数据
            const orderData = {
                user_id: user.user_id,
                products: cartItems.map(item => ({
                    product_id: item.product_id,
                    quantity: item.quantity,
                    sku: item.sku,
                    price: item.price,
                    region_id: item.region_id,
                    address_id: selectedAddresses[item.product_id],
                    shipping_fee: item.shipping_fee,
                    tax_fee: item.tax_fee
                })),
                total_amount: cartItems.reduce((total, item) => 
                    total + (item.price * item.quantity) + item.shipping_fee + item.tax_fee, 0),
                platform_id: user.platform_id || 1,
                d1: user.d1 || new Date().toISOString().split('T')[0],
                d2: user.d2 || new Date().toISOString().slice(0, 7),
                d3: user.d3 || new Date().getFullYear().toString(),
                pay_way: payWay,
                pay_type: payType
            };
            
            // 输出提交的数据到控制台
            console.log('提交订单数据:', JSON.stringify(orderData, null, 2));
            
            try {
                const response = await fetch('https://cyadmin.shopaeo.cn/api/Retail_orders/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(orderData)
                });
                
                const data = await response.json() as { success: boolean; message?: string; order_id?: string };
                
                if (response.ok && data.success) {
                    // 清空购物车
                    localStorage.removeItem('cart');
                    
                    // 跳转到订单详情页或支付页面
                    if (data.order_id) {
                        window.location.href = `/shop/order-detail?id=${data.order_id}`;
                    } else {
                        alert('订单创建成功');
                        window.location.href = '/shop/dashboard';
                    }
                } else {
                    alert(data.message || '创建订单失败，请重试');
                }
            } catch (error) {
                console.error('提交订单失败:', error);
                alert('提交订单失败，请重试');
            }
        }

        // 初始化页面
        function initPage() {
            // 加载购物车数据
            loadCartItems();
            
            // 加载收货地址
            loadAddresses();
            
            // 加载支付类型
            loadPayTypes();
            
            // 绑定支付方式切换事件
            document.querySelectorAll('input[name="payWay"]').forEach(radio => {
                radio.addEventListener('change', (e) => {
                    const payWay = parseInt((e.target as HTMLInputElement).value);
                    const payTypeContainer = document.getElementById('payTypeContainer');
                    if (payTypeContainer) {
                        payTypeContainer.style.display = payWay === 2 ? 'block' : 'none';
                    }
                });
            });
            
            // 绑定提交订单按钮事件
            const submitOrderBtn = document.getElementById('submitOrderBtn');
            if (submitOrderBtn) {
                submitOrderBtn.addEventListener('click', submitOrder);
            }
        }

        // 页面加载完成后初始化
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initPage);
        } else {
            initPage();
        }
    </script>

</Layout>